// Code generated by ent, DO NOT EDIT.

package rulechan

import (
	"fmt"
	"time"
)

const (
	// Label holds the string label denoting the rulechan type in the database.
	Label = "rule_chan"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldRootNode holds the string denoting the root_node field in the database.
	FieldRootNode = "root_node"
	// FieldStatus holds the string denoting the status field in the database.
	FieldStatus = "status"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// EdgeRules holds the string denoting the rules edge name in mutations.
	EdgeRules = "rules"
	// Table holds the table name of the rulechan in the database.
	Table = "rule_chan"
	// RulesTable is the table that holds the rules relation/edge.
	RulesTable = "rule_nodes"
	// RulesInverseTable is the table name for the RuleNode entity.
	// It exists in this package in order to avoid circular dependency with the "rulenode" package.
	RulesInverseTable = "rule_nodes"
	// RulesColumn is the table column denoting the rules relation/edge.
	RulesColumn = "chain_id"
)

// Columns holds all SQL columns for rulechan fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldRootNode,
	FieldStatus,
	FieldCreatedAt,
	FieldUpdatedAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// NameValidator is a validator for the "name" field. It is called by the builders before save.
	NameValidator func(string) error
	// RootNodeValidator is a validator for the "root_node" field. It is called by the builders before save.
	RootNodeValidator func(string) error
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
)

// Status defines the type for the "status" enum field.
type Status string

// Status values.
const (
	StatusActivated Status = "deactivated"
)

func (s Status) String() string {
	return string(s)
}

// StatusValidator is a validator for the "status" field enum values. It is called by the builders before save.
func StatusValidator(s Status) error {
	switch s {
	case StatusActivated:
		return nil
	default:
		return fmt.Errorf("rulechan: invalid enum value for status field: %q", s)
	}
}
